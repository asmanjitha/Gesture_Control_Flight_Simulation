/*
 * Copyright (c) 2021 AGT Group (R&D) GmbH. All rights reserved.
 * Redistribution and use in source and binary form without the express
 * permission of the above copyright holder is not permitted.
 */

//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// CoachAI Core Version: 13.2.3
// Generated On: 2022-06-13T13:29:09Z
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CoachAiEngine;
using System.Linq;
using UnityEngine;
using UnityEngine.Events;

namespace CoachAiEngine.Analytics {

    [System.CodeDom.Compiler.GeneratedCode(tool: "Coach-Ai engine", version: "13.2.3")]
    [CreateAssetMenu(fileName = nameof(BallPresenceAnalytics), menuName = "Coach-AI Engine/Components/BallSports/BallPresenceAnalytics")]
    public class BallPresenceAnalytics : CoachComponent {

        public override string ComponentId => "com.coachai.engine.analytics.ball.components.BallPresenceAnalytics";
        private static readonly string[] eventIds =  {
            "com.coachai.engine.analytics.ball.presence.BallPresenceUpdate"
        };

        private static readonly bool BallPresenceEnableSizeErrorDetection = false;
        private static readonly float BallPresenceExpectedBallDiameter = 0.22f;
        private static readonly double BallPresenceMaxChangeFrequency = 1.0;

        [Tooltip("If enabled, the BallPresence event will provide indication whether the ball size is smaller or larger than the configured [BallDiameter] of the activity. At this time the size error detection triggers only if the ball size deviates strongly from the expected value. See `BallPresence` for further details.")]
        public bool ballPresenceEnableSizeErrorDetection = BallPresenceEnableSizeErrorDetection;
        [Tooltip("Expected diameter of the ball for ball presence detection.")]
        public float ballPresenceExpectedBallDiameter = BallPresenceExpectedBallDiameter;
        [Tooltip("Number of seconds between each ball presence update event.")]
        public double ballPresenceMaxChangeFrequency = BallPresenceMaxChangeFrequency;

        public override Dictionary<string, object> Parameters {
            get {
                var parameters = new Dictionary<string, object>();

                AddUnlessDefault("com.coachai.engine.analytics.ball.components.BallPresenceEnableSizeErrorDetection",
                    ballPresenceEnableSizeErrorDetection, BallPresenceEnableSizeErrorDetection, parameters
                );
                AddUnlessDefault("com.coachai.engine.analytics.ball.components.BallPresenceExpectedBallDiameter",
                    ballPresenceExpectedBallDiameter, BallPresenceExpectedBallDiameter, parameters
                );
                AddUnlessDefault("com.coachai.engine.analytics.ball.components.BallPresenceMaxChangeFrequency",
                    ballPresenceMaxChangeFrequency, BallPresenceMaxChangeFrequency, parameters
                );
                return parameters;
            }
        }

        private void AddUnlessDefault<T>(string key, T value, T @default, Dictionary<string, object> parameters) {
            if (value.Equals(@default)) return;
            parameters.Add(key, value);
        }

        public override List<string> PublishedEventIds => eventIds.ToList();

    }
}