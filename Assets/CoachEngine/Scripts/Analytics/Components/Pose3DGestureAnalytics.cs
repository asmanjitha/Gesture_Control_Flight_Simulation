/*
 * Copyright (c) 2021 AGT Group (R&D) GmbH. All rights reserved.
 * Redistribution and use in source and binary form without the express
 * permission of the above copyright holder is not permitted.
 */

//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// CoachAI Core Version: 13.2.3
// Generated On: 2022-06-13T13:29:09Z
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CoachAiEngine;
using System.Linq;
using UnityEngine;
using UnityEngine.Events;

namespace CoachAiEngine.Analytics {

    [System.CodeDom.Compiler.GeneratedCode(tool: "Coach-Ai engine", version: "13.2.3")]
    [CreateAssetMenu(fileName = nameof(Pose3DGestureAnalytics), menuName = "Coach-AI Engine/Components/Generic/Pose3DGestureAnalytics")]
    public class Pose3DGestureAnalytics : CoachComponent {

        public override string ComponentId => "com.coachai.engine.analytics.pose3d.components.Pose3DGestureAnalytics";
        private static readonly string[] eventIds =  {
            "com.coachai.engine.analytics.pose3d.Pose3dGestureUpdate"
        };

        private static readonly Pose3dModelParamType Pose3dModelParam = Pose3dModelParamType.Pose3dSingle13clu13clu1fGeneralV4;
        private static readonly bool LocalizePose3dOnARPlane = true;
        private static readonly float KnownPersonSize = 1.8f;

        [Tooltip("Select a Pose3D model. Please read Pose3D documentation to be aware of the available models, use cases and limitations.")]
        public Pose3dModelParamType pose3dModelParam = Pose3dModelParam;
        [Tooltip("Use AR planes to determine the person location on the ground and its real size. If disabled, the Pose3DResult will not contain poses in world coordinates.")]
        public bool localizePose3dOnARPlane = LocalizePose3dOnARPlane;
        [Tooltip("If you know the size of the recorded person, enter his/her height (in meters). Knowing the size of a person allows to estimate the real position relative to the camera. No AR planes are needed in this case.")]
        public float knownPersonSize = KnownPersonSize;

        public override Dictionary<string, object> Parameters {
            get {
                var parameters = new Dictionary<string, object>();

                AddUnlessDefault("com.coachai.engine.analytics.pose3d.components.Pose3dModelParam",
                    Pose3dModelParamTypeLookup[pose3dModelParam], Pose3dModelParamTypeLookup[Pose3dModelParam], parameters
                );
                AddUnlessDefault("com.coachai.engine.analytics.pose3d.components.LocalizePose3dOnARPlane",
                    localizePose3dOnARPlane, LocalizePose3dOnARPlane, parameters
                );
                AddUnlessDefault("com.coachai.engine.analytics.pose3d.components.KnownPersonSize",
                    knownPersonSize, KnownPersonSize, parameters
                );
                return parameters;
            }
        }

        private void AddUnlessDefault<T>(string key, T value, T @default, Dictionary<string, object> parameters) {
            if (value.Equals(@default)) return;
            parameters.Add(key, value);
        }

        public override List<string> PublishedEventIds => eventIds.ToList();

        public enum Pose3dModelParamType {
            Pose3dSingle13clu13clu1fsGeneralV7,
            Pose3dSingle13clu13clu1fsGeneralV3,
            Pose3dSingle13clu13clu1fGeneralV4,
            Pose3dSingle17lu17lu1fsGeneralV1,
            Pose3dSingle25fhlu25fhlu1fsFitnessV2
        }

        public Dictionary<Pose3dModelParamType, string> Pose3dModelParamTypeLookup = new Dictionary<Pose3dModelParamType, string> {
            { Pose3dModelParamType.Pose3dSingle13clu13clu1fsGeneralV7, "pose3d.single-13clu.13clu-1fs.general v7" },
            { Pose3dModelParamType.Pose3dSingle13clu13clu1fsGeneralV3, "pose3d.single-13clu.13clu-1fs.general v3 (Experimental)" },
            { Pose3dModelParamType.Pose3dSingle13clu13clu1fGeneralV4, "pose3d.single-13clu.13clu-1f.general v4" },
            { Pose3dModelParamType.Pose3dSingle17lu17lu1fsGeneralV1, "pose3d.single-17lu.17lu-1fs.general v1" },
            { Pose3dModelParamType.Pose3dSingle25fhlu25fhlu1fsFitnessV2, "pose3d.single-25fhlu.25fhlu-1fs.fitness v2 (Experimental)" }
        };

    }
}