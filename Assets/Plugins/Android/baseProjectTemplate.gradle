/** baseTemplate.gradle **/

allprojects {
    buildscript {
        repositories {**ARTIFACTORYREPOSITORY**
            google()
            mavenCentral()
            gradlePluginPortal()
        }

        dependencies {
            // If you are changing the Android Gradle Plugin version, make sure it is compatible with the Gradle version preinstalled with Unity
            // See which Gradle version is preinstalled with Unity here https://docs.unity3d.com/Manual/android-gradle-overview.html
            // See official Gradle and Android Gradle Plugin compatibility table here https://developer.android.com/studio/releases/gradle-plugin#updating-gradle
            // To specify a custom Gradle version in Unity, go do "Preferences > External Tools", uncheck "Gradle Installed with Unity (recommended)" and specify a path to a custom Gradle version
            classpath 'com.android.tools.build:gradle:4.0.1'
            classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.30'
        }
    }

    repositories {**ARTIFACTORYREPOSITORY**
        google()
        mavenCentral()
        flatDir {
            dirs "${project(':unityLibrary').projectDir}/libs"
        }
        maven {
            url 'https://nexus.coach-ai.com/repository/coach-release/'
            metadataSources {
                gradleMetadata()
                mavenPom()
            }
            credentials {
                // do NOT save your credentials here! if you must use environment vars or
                // $USER_HOME/.gradle/gradle.properties file
                // preferably mirror artifacts once to your internal maven repo and use that one instead
                username getProperty("COACH_AI_REPO_USERNAME")
                password getProperty("COACH_AI_REPO_PASSWORD")
            }
        }
    }

    pluginManager.withPlugin('com.android.application') {
        android {
            buildTypes {
                debug {
                    matchingFallbacks = ['release', 'debug']
                }
            }
        }
    }
    pluginManager.withPlugin('com.android.library') {
        android {
            buildTypes {
                debug {
                    matchingFallbacks = ['release', 'debug']
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
